---
import { getCollection, getEntry } from 'astro:content';
import Tag from "./Tag.astro"
import { postsDefaultSortFunc } from "../content/utils";
// Props
export interface BlogProps {
  date: string;
  title: string;
}

const allPosts = (await getCollection("posts")).sort(postsDefaultSortFunc);

---
{allPosts.map(post => {
  const postDate = new Date(post.data.publishedAt).toLocaleDateString('ja-JP', { year: 'numeric', month: '2-digit', day: '2-digit' });
  const postTitle = post.data.title;
  const postTags = post.data.tags.map(tag => (
    <Tag name={tag} href="/tags/${tag}" focused={false} />
  )).reduce((prev, curr) => [prev, ' ', curr]);
  const postUrl = `/posts/${post.slug}`;
  return (
  <a class="post-url" href={postUrl}>
    <div class="blog-card">
        <p class="date">{postDate}</p>
        <p class="title">{postTitle}</p>
        <p class="tags">{postTags}</p>
    </div>
  </a>
  );
})}

<style>
  .post-url {
    position:relative;
    text-decoration: none;
    color: black;
    display: block; /* Ensure display is set to block */
  }
  .post-url::before {
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
  }
  .blog-card {
    border-bottom: 1px solid #ddd;
    background: #ffffffe6;
    padding: 10px;
    display: block; /* Ensure display is set to block */
  }
  .title {
    font-size: 1.25rem;
    padding: 5px ;
    font-weight: bold;
    margin-left: 1rem;
  }
  .date {
    font-size: 0.9rem;
    margin: 0;
  }
  .tags {
    gap: 5px;
    position: relative;
    z-index:2;
  }
</style>
