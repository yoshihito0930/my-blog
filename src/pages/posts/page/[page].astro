---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import type { Page } from "astro";
import PostList from "../../../components/PostList.astro";
import { postsDefaultSortFunc } from "../../../content/utils";
import { BLOG_TITLE, PAGE_SIZE } from "../../../constraint";
import Pagination from "../../../components/Pagination.astro";
import Tag from "../../../components/Tag.astro";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPosts = await getCollection("posts", ({ data }) => {
    return !data.draft;
  });
  return paginate(allPosts.sort(postsDefaultSortFunc), { pageSize: PAGE_SIZE });
}

interface Props {
  page: Page<CollectionEntry<"posts">>;
}

const allPosts = (await getCollection("posts")).sort(postsDefaultSortFunc);

const { page } = Astro.props;
const posts = page.data;
const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

// URLプレフィックスを修正して、1ページ目は/postsにリダイレクト
const urlPrefix = `/posts`;
---

<BaseLayout title={`${BLOG_TITLE} - ページ${page.currentPage}`}>
  <div class="page-container">
    <!-- ブログタイトルを表示 -->
    <h1 class="page-title">{BLOG_TITLE}</h1>
    
    <div class="posts-layout">
      <!-- メインコンテンツ -->
      <div class="main-content">
        <PostList posts={posts} />
        <Pagination page={page} urlPrefix={urlPrefix} />
      </div>

      <!-- tagバー -->
      <div class="tagbar">
        <div class="tag-section">
          <h2 class="tag-title">Tag</h2>
          <div class="tags-container">
            {tags.map(tag => (
              <Tag name={tag} href={`/tags/${tag}`} focused={false} />
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  .page-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .page-title {
    margin-bottom: var(--spacing-lg);
    text-align: center;
  }
  
  /* モバイルではメインコンテンツとサイドバーを縦に配置 */
  .posts-layout {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--spacing-xl);
  }
  
  .main-content {
    width: 100%;
  }
  
  .tag-title {
    font-size: var(--font-size-lg);
    margin-bottom: var(--spacing-md);
  }
  
  .tag-section {
    background-color: var(--color-bg-card);
    padding: var(--spacing-md);
    border-radius: var(--border-radius-md);
    box-shadow: var(--shadow-sm);
  }
  
  .tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-xs);
  }
  
</style>
